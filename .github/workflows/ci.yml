name: CI

on:
  push:
    branches:
      - main
      - master
  pull_request: {}

concurrency:
  group: ci-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

env:
  CI: true
  dist: packages/ember-headless-form/dist

jobs:
  install_dependencies:
    name: Install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: TurboRepo local server
        uses: felixmosh/turborepo-gh-artifacts@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          server-token: foo-123
      - uses: ./.github/actions/pnpm


  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs:
      - install_dependencies
    steps:
      - uses: actions/checkout@v3
      - name: TurboRepo local server
        uses: felixmosh/turborepo-gh-artifacts@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          server-token: foo-123
      - uses: ./.github/actions/pnpm
      - name: Lint + Format + Glint
        run: pnpm lint

  typecheck:
    name: '${{ matrix.typescript-scenario }}'
    runs-on: ubuntu-latest
    timeout-minutes: 2
    needs:
      - install_dependencies
    continue-on-error: true
    strategy:
      fail-fast: true
      matrix:
        typescript-scenario:
          - typescript@4.8
          - typescript@4.9

    steps:
      - uses: actions/checkout@v3
      - name: TurboRepo local server
        uses: felixmosh/turborepo-gh-artifacts@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          server-token: foo-123
      - uses: ./.github/actions/pnpm
      - name: 'Change TS to ${{ matrix.typescript-scenario }}'
        run: 'pnpm add --save-dev ${{ matrix.typescript-scenario}}'
        working-directory: ./test-app
      - name: 'Type checking'
        run: pnpm _turbo typecheck

  default_tests:
    name: Default Tests
    timeout-minutes: 5
    runs-on: ubuntu-latest
    needs:
      - install_dependencies
    steps:
      - uses: actions/checkout@v3
      - name: TurboRepo local server
        uses: felixmosh/turborepo-gh-artifacts@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          server-token: foo-123
      - uses: ./.github/actions/pnpm
      - run: pnpm test

  floating_tests:
    name: Floating Deps Test
    timeout-minutes: 5
    runs-on: ubuntu-latest
    needs:
      - install_dependencies
    steps:
      - uses: actions/checkout@v3
      - name: TurboRepo local server
        uses: felixmosh/turborepo-gh-artifacts@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          server-token: foo-123
      - uses: ./.github/actions/pnpm
      - name: Install Dependencies (without lockfile)
        run: rm pnpm-lock.yaml && pnpm install
      - run: pnpm test

  try_scenarios:
    name: ${{ matrix.try-scenario }}
    timeout-minutes: 5
    runs-on: ubuntu-latest
    needs: [default_tests]

    strategy:
      fail-fast: false
      matrix:
        try-scenario:
          - ember-lts-4.4
          - ember-lts-4.8
          - ember-release
          - ember-beta
          - ember-canary
          - "'ember-lts-4.8 + embroider-safe'"
          - "'ember-lts-4.8 + embroider-optimized'"
          - "'ember-release + embroider-optimized'"

    steps:
      - uses: actions/checkout@v3
      - name: TurboRepo local server
        uses: felixmosh/turborepo-gh-artifacts@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          server-token: foo-123
      - uses: ./.github/actions/pnpm
      - name: Setup Tests
        working-directory: ./test-app
        run: >-
          node_modules/.bin/ember try:one ${{ matrix.try-scenario }}
          --skip-cleanup --- bash -c "cd ../ && pnpm test"

  # https://github.com/changesets/action
  release:
    name: Release
    timeout-minutes: 5
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs:
      - default_tests
      - floating_tests
      - typecheck
      - try_scenarios

    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - name: TurboRepo local server
        uses: felixmosh/turborepo-gh-artifacts@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          server-token: foo-123
      - uses: ./.github/actions/pnpm
      - run: pnpm build
      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          # This expects you to have a script called release which does a build for your packages and calls changeset publish
          publish: pnpm release
          title: 'Release Preview'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  # TODO: add docs app + docs
  #
  # TypecheckDocs:
  #   name: Typecheck Docs
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         persist-credentials: false
  #     - uses: ./.github/actions/pnpm
  #     - uses: ./.github/actions/download-built-package
  #     - run: pnpm glint
  #       working-directory: docs-app

  # PublishDocstoCloudflarePages:
  #   name: Publish Docs to Cloudflare Pages
  #   runs-on: ubuntu-latest
  #   needs: build
  #   permissions:
  #     contents: read
  #     deployments: write
  #   outputs:
  #     url: ${{ steps.publishStep.outputs.url }}
  #     env: ${{ steps.publishStep.outputs.environment }}
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         persist-credentials: false
  #     - uses: ./.github/actions/pnpm
  #     - uses: ./.github/actions/download-built-package
  #     - run: pnpm build:docs-app
  #     - name: Publish to Cloudflare Pages
  #       id: publishStep
  #       uses: cloudflare/pages-action@1
  #       with:
  #         apiToken: ${{ secrets.UX_OSS_CLOUDFLARE_API_TOKEN }}
  #         accountId: ${{ secrets.UX_OSS_CLOUDFLARE_ACCOUNT_ID }}
  #         projectName: ember-toucan-core
  #         directory: ./docs-app/dist
  #         gitHubToken: ${{ secrets.GITHUB_TOKEN }}

  # PostPreviewURLascommenttoPR:
  #   name: Post Preview URL as comment to PR
  #   runs-on: ubuntu-latest
  #   needs: PublishDocstoCloudflarePages
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         persist-credentials: false
  #     - uses: ./.github/actions/pnpm
  #     - uses: ./.github/actions/download-built-package
  #     - uses: marocchino/sticky-pull-request-comment@v2
  #       with:
  #         message: |+
  #           ## Preview URLs
  #           GH Env: ${{ needs.PublishDocstoCloudflarePages.outputs.env }}
  #           docs: ${{ needs.PublishDocstoCloudflarePages.outputs.url }}
  #           api docs: ${{ needs.PublishDocstoCloudflarePages.outputs.url }}/api/modules.html
